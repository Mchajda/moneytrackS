{% extends 'base.html.twig' %}

{% block title %}Main Page{% endblock %}

{% block sidemenu %}
    <a href="{{ path('add_expense_form', {'year' : current_year, 'month' : current_month}) }}"
       class="btn btn-block btn-outline-primary"><span class="material-icons">add</span>Add Expense</a>
    <hr>
    <a href="{{ path('main') }}" class="btn btn-block btn-primary text-left"><b><span
                    class="material-icons mr-1">list</span>Home</b></a>
    <a href="{{ path('transactions', {'year' : current_year, 'month' : current_month}) }}"
       class="btn btn-block btn-light text-left"><span class="material-icons mr-1">shopping_cart</span>Transactions</a>
    <a href="{{ path('summary', {'year' : current_year, 'month' : current_month}) }}"
       class="btn btn-block btn-light text-left"><span class="material-icons mr-1">auto_graph</span>Summary</a>
{% endblock %}

{% block body %}
    <div class="row mt-4">
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="card card-body bg-light pt-0">
                <h3>Twoje ostatnie transakcje</h3>
                {% for expense in expenses %}
                    <div class="card shadow my-2">
                        <div class="card-body pt-2 pb-2">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <div class="border rounded-circle p-2">
                                        <a href="#">
                                            <img src="/assets/icons/{{ expense.getCategory().categoryName }}.svg" class="img-fluid"
                                                 style="width: 36px; height: 36px;">
                                        </a>
                                    </div>
                                    <div class="pl-3">
                                        <div class="d-flex flex-column">
                                            <div class=""><b>{{ expense.getTitle() }}</b></div>
                                            <div class=""><small>{{ expense.getDate() }}</small></div>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    {% if expense.getDirection() == "income" %}
                                        <span class="text-success">+{{ expense.getAmount() }} PLN</span>
                                    {% else %}
                                        <span class="text-danger">-{{ expense.getAmount() }} PLN</span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>

        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="card card-body py-4 shadow">
                <h3>{{ current_year }}-{{ current_month }}</h3>
                <div >
                    <canvas id="expensesVsIncomesChart"></canvas>
                </div>
                <hr>
                <div >
                    <canvas id="monthChart"></canvas>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <!-- Charts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let monthChart = document.getElementById('monthChart').getContext('2d');
        let chart = new Chart(monthChart, {
            type: 'doughnut',
            data: {
                labels:{{ categories_for_chart|json_encode()|raw }},
                datasets: [{
                    label: '',
                    data:{{ expenses_for_chart|json_encode()|raw }},
                    backgroundColor: {{ categories_colors|json_encode()|raw }}
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                }
            }
        });
    </script>
    <script>
        const labels = ['Przychody', "Wydatki"];

        const ctx = document.getElementById('expensesVsIncomesChart').getContext('2d');
        const expensesVsIncomesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    // label: 'Wydatki vs Przychody',
                    data: [{{ thisMonthSumOfIncomes }}, {{ thisMonthSumOfExpenses }}],
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 99, 132, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                indexAxis: 'y',
                plugins: {
                    legend: {
                        display: false,
                    }
                }
            }
        });
    </script>
{% endblock %}